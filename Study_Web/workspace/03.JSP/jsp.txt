○ JSP (Java Server Page) : WebContent > New > JSP File
	- HTML 코드에 자바코드를 삽입해서 만든 페이지
	- 서버 측에서 동작되는 언어
	- 확장자는 *.jsp
	- 동작방식 : 컴파일 과정을 거쳐야 하므로 최초 실행은 느리다
		1. test.jsp가 Servlet으로 변경 : test_jsp.java(Servlet)
		2. test_jsp.java가 컴파일 : test_jsp.class(Class)
		3. test_jsp.class가 실행
		D:\Study_Web\workspace\.metadata\.plugins\org.eclipse.wst.server.core
			\t	mp0\work\Catalina\localhost\fp\org\apache\jsp
			
★ JSP 구성요소
1. 스크립트적인 요소 (프로그래밍적인 요소)
	1) 스크립틀릿 : 가장 많이 사용되는 요소
		- <% 자바코드 %>
	
	2) 지시자 : MIME Type, import, JSTL
		- <%@ page contentType="text/html; charset=UTF-8 %>
		-	<%@ import = "com.hanul.study.MemberDTO" %>
		- <%@ taglib prefix="c uri="http://sun.java.com/" %>
	
	3) 선언문 : 메소드 정의
		-- <%! public void 메소드명(매개변수) { ~코드구현~ } %>
		
	4) 표현식 : 값을 출력
		- <%= 변수명 %>
		- <%= 수식 %>
		- <%= 메소드 호출문 %>
		
	5) 주석 : 문서(코드)에 대한 보충 설명 → 컴파일 되지 않는다
		- <%-- 설명 --%> : JSP주석 → 소스보기로 확인할 수 없다
		- <!-- 설명 --> : html주석 → 소스보기로 주석의 내용을 출력된다
		
2. UI요소 (화면구현 요소)
	6) html 코드
	7) css
	8) javascript, jQuery
	9) 기타 : image, sound 등
	
★ JSP Action Tag: 프로그램적인 요소 → 태그적인 요소
	- <jsp : useBean ~~ /> : 객체를 생성하는 태그
	- <jsp : setProperty ~~ /> : DTO 객체에 있는 setter method 호출
	- <jsp : getProperty ~~ /> : DTO 객체에 있는 getter method 호출
	- <jsp : forward ~~ /> : forward() 방식으로 동적 페이지 전환
	- <jsp : param ~~ /> : 페이지 전호나 시 매개변수를 전달
	- <jsp : include ~~ /> : 특정페이지를 포함한다
			○ include 방법 : jsp13, 14, 15, 16
				# <%@ include file = "~~.jsp" %> ▶ 지시자
				# <jsp : include page = "~~.jsp" /> ▶ Action Tag
				
★ Scope : 바인딩(연결) 객체의 공유범위
	1. pageContext scope
		- pageContext 내장객체를 이용하여 바인딩(연결) 객체를 공유
		- 객체를 만든 (setAttribute()) jsp 페이지(현재 페이지)에서만 사용 가능
	
	2. request scope
		- request 내장객체를 이용하여 바인딩(연결) 객체를 공유
		- 객체를 만든 jsp 페이지(현재 페이지)와 요청(forward())한 jsp 페이지에서만 사용 가능 
	
	3. session scope
		- session 내장객체를 이용하여 바인딩(연결) 객체를 공유
		- 모든 jsp 페이지에서 사용 가능
		- 세션 속성값을 설정하여 지정한 시간 또는 웹 브라우저가 열려 있는 동안만 사용 가능
	
	4. application scope
		- application 내장객체를 이용하여 바인딩(연결) 객체를 공유
		- 모든 jsp 페이지에서 사용 가능
		- 웹브라우저가 종료되어도 서버가 중지되기 전까지 사용 가능
		
★ EL (Expression Language) 문법(표현식)
	○ 기본형식 ▶ ${ 출력값 } : 출력값은 다양한 형태로 표현 가능
		- ${ param.변수이름 } : jsp20, jsp25
		- ${ 객체이름.속성이름 } : jsp20
		- ${ 객체이름 } : jsp21, jsp22
		- ${ paramValues.배열이름[인덱스] } : jsp23, jsp24
		- ${ 수식(계산식, 비교연산) } : jsp25, jsp26
		- ${ 배열이름[인덱스] } : jsp27, jsp28
		- ${ 배열이름[인덱스].속성이름 } : jsp27, jsp28
		
★ JSTL[JSP(JAVA) Standard Tag Library]
	○ JSTL 라이브러리 설치하기
		- Apache Tomcat > Download > Taglibs > Apache Standard Taglibs
			> Standard 1.1 download > binaries/ > jakarta-taglibs-standard-1.1.2.zip 다운로드
		- http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/jakarta-taglibs-standard-1.1.2.zip
		- 압축해제 후 lib 폴더 > jstl.jar, standard.jar 복사 > WebContent > WEB-INF > lib 붙여넣기
		
	○ JSTL Tag 종류 : JSP 문서 상단에 반드시 지시자를 작성해야 한다
		- 기본프로그래밍 Tag (변수, 배열, if, for, switch-case etc.) ▶ core
			<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
			
		- 포맷팅 Tag (날짜, 시간, 숫자, 통화기호 etc. 표시형식) ▶ format
			<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
			
		- JSTL 제공되는 함수(String Class 메소드) ▶ function
			<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>